/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.joaomarccos.gui.client.rmi;

import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author joaomarcos
 */
public class ChatPanel extends javax.swing.JPanel {

    private MainFrame mainFrame;
    private User user;

    /**
     * Creates new form ChatPanel
     */
    public ChatPanel() {
        initComponents();
    }

    ChatPanel(MainFrame mainFrame, User user) {
        this();
        this.mainFrame = mainFrame;
        this.user = user;
        refreshDialog();        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDialog = new javax.swing.JTextArea();
        jTextFieldMessage = new javax.swing.JTextField();
        jButtonSend = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jLabelUsers = new javax.swing.JLabel();
        jButtonLoggout = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTextAreaDialog.setEditable(false);
        jTextAreaDialog.setColumns(20);
        jTextAreaDialog.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDialog);

        jButtonSend.setText("Enviar");
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        jButtonRefresh.setText("Atualizar");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jLabelUsers.setText("jLabel1");

        jButtonLoggout.setText("Sair");
        jButtonLoggout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoggoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSend))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLoggout)
                        .addGap(137, 137, 137)
                        .addComponent(jLabelUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSend))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonRefresh)
                        .addComponent(jButtonLoggout))
                    .addComponent(jLabelUsers))
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
        String text = jTextFieldMessage.getText();
        if (text != null && !text.isEmpty()) {
            try {
                Message message = new Message("<" + user.getName() + "> disse: " + text, LocalDateTime.now());
                this.mainFrame.getChat().sendMessage(user, message);
                this.jTextFieldMessage.setText("");
            } catch (NotConnectedToServerException ex) {
                JOptionPane.showConfirmDialog(mainFrame, "Não Foi possível estabeler a comunicação com o servidor!", "Falha na conexão", JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                exit();
            }
        }
    }//GEN-LAST:event_jButtonSendActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        refreshDialog();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButtonLoggoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoggoutActionPerformed
        try {
            this.mainFrame.getChat().logout(user);
            exit();
        } catch (NotConnectedToServerException ex) {
            JOptionPane.showConfirmDialog(mainFrame, "Não Foi possível estabeler a comunicação com o servidor!", "Falha na conexão", JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            exit();
        }
    }//GEN-LAST:event_jButtonLoggoutActionPerformed

    private void exit(){
        this.mainFrame.setContentPane(new LoginPanel(this.mainFrame));
        this.mainFrame.setVisible(true);
    }
    private void refreshDialog() {
        try {
            List<Message> receiveAll = this.mainFrame.getChat().receiveAll(user);
            for (Message msg : receiveAll) {
                this.jTextAreaDialog.append(msg.toString());
            }
            this.jLabelUsers.setText("Usuários online: " + this.mainFrame.getChat().getQuatityOfUsersConnected(user));
        } catch (NotConnectedToServerException ex) {
            JOptionPane.showConfirmDialog(mainFrame, "Não Foi possível estabeler a comunicação com o servidor!", "Falha na conexão", JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLoggout;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JLabel jLabelUsers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDialog;
    private javax.swing.JTextField jTextFieldMessage;
    // End of variables declaration//GEN-END:variables
}
